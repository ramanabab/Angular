Services.

    - Services Are used to Share the Common Business logic to controllers.

    - we have two types of Services.

        1.Custom Services

        2.Predefined Services

Custom Services.

    Creating Our Own Service Based on Application Requirement called as Custom Service.

    In AngularJS we can create Custom Services in 5 ways.

    1.provider()
    2.factory()
    3.value()
    4.constant()
    5.service()

1.Creating the Custom Service by using provider().


Ex.

app.config(config);
config.$inject=["my_serviceProvider"];
function config(my_serviceProvider){
    my_serviceProvider.var_one="root1";
}


app.provider("my_service",my_service);
function my_service(){
    this.var_one="root";
    this.$get = function(){
        return this.var_one;
    }
}


app.controller("ctrl_one",ctrl_one);
ctrl_one.$inject=["$scope","my_service"];
function ctrl_one($scope,my_service){
    $scope.var_one=my_service;
}

app.controller("ctrl_two",ctrl_two);
ctrl_two.$inject=["$scope","my_service"];
function ctrl_two($scope,my_service){
    $scope.var_two=my_service;
}


---------
Creating the Custom Service by using factory().


var annonymusClass = function(data){
    this.var_one=data;
    this.my_fun=function(){
        return this.var_one;
    }
}


app.factory("my_service",my_service);
function my_service(){
    return new annonymusClass("I am from Factory").my_fun();
}




Creating Custom Service by using value().

    we can create the services in the form of a key & value pairs.

app.value("my_service","First Value");
app.value("my_service","Second Value");


O/P:

    Second Value
    Second Value


Creating the Custom Service by using Constant.

    app.constant("my_service","First Value");
    app.constant("my_service","Second Value");


O/P:

    First Value
    First Value


Creating the custom service by using service()
-
app.service("my_service",my_service);
function my_service(){
    this.my_fun = function(){
        return "I am from Service";
    }
}


[Note. it will dependent on "user defined function" to

       return values to controllers]

